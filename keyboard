#!/usr/bin/env bash

script_path=$(realpath $0)
config_kmonad_dir=$(dirname $script_path)
# config_kmonad_dir2="${BASH_SOURCE%/*}"

if test -z ${1-}; then
    echo "No input specified. You need to specify what key board"
    echo "you want to run kmonad for."
    echo "(ergo|mbair|mbpro)"
    exit 1
fi

# --------------------------
# ---       cfg       ---
# --------------------------

declare -A defcfg_input_str=(
    [ergo]="Ergodox EZ"
    [mbair]="Apple Internal Keyboard / Trackpad"
    [mbpro]="Apple Internal Keyboard / Trackpad"
)

input="${defcfg_input_str[$1]}"
output="kext"
fallthrough=false

defcfg="(defcfg
input (iokit-name \"$input\")
output ($output)
fallthrough $fallthrough
)"

# --------------------------
# ---       src       ---
# --------------------------

declare -A defsrc_files=(
    [ergo]="defsrc_ergodox.kbd"
    [mbair]="defsrc_mbair.kbd"
    [mbpro]="defsrc_mbpro_swe.kbd"
)

defsrc="$config_kmonad_dir/defsrc/${defsrc_files[$1]}"

# ----------------------------------
# ---      compile and run      ---
# ----------------------------------

compile_layout() {
    echo "$defcfg"
    cat $defsrc
    cat "$config_kmonad_dir/common/"*.kbd
}

# bash
tmp_file="$(mktemp /tmp/kmonad-XXX)"
compile_layout > $tmp_file
sudo kmonad $tmp_file
# sudo kmonad <(compile_layout) # doesn't work
# -f doesn't accept `false`. Complains about invalid...
# kmonad <(compile_layout) -f $fallthrough -i $input -o $output -d

# zsh
# sudo kmonad =(compile_layout)
